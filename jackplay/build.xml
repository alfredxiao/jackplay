<project name="jackplay" default="dist" basedir="." xmlns:artifact="antlib:org.apache.maven.artifact.ant">
  <path id="maven-ant-tasks.classpath" path="lib/maven-ant-tasks-2.1.3.jar" />
  <typedef resource="org/apache/maven/artifact/ant/antlib.xml"
           uri="antlib:org.apache.maven.artifact.ant"
           classpathref="maven-ant-tasks.classpath" />

  <!-- define Maven coordinates -->
  <property name="groupId" value="com.github.alfredxiao" />
  <property name="bootstrap-artifactId" value="jackplay-bootstrap" />
  <property name="agent-artifactId" value="jackplay-agent" />
  <property name="version" value="0.9.6-SNAPSHOT" />

  <!-- define artifacts' name, which follows the convention of Maven -->
  <property name="bootstrap-jar" value="dist/${bootstrap-artifactId}-${version}.jar" />
  <property name="bootstrap-javadoc-jar" value="dist/${bootstrap-artifactId}-${version}-javadoc.jar" />
  <property name="bootstrap-sources-jar" value="dist/${bootstrap-artifactId}-${version}-sources.jar" />
  <property name="agent-jar" value="dist/${agent-artifactId}-${version}.jar" />
  <property name="agent-javadoc-jar" value="dist/${agent-artifactId}-${version}-javadoc.jar" />
  <property name="agent-sources-jar" value="dist/${agent-artifactId}-${version}-sources.jar" />

  <!-- defined maven snapshots and staging repository id and url -->
  <property name="ossrh-snapshots-repository-url" value="https://oss.sonatype.org/content/repositories/snapshots/" />
  <property name="ossrh-staging-repository-url"   value="https://oss.sonatype.org/service/local/staging/deploy/maven2/" />

  <!-- there server id in the Maven settings.xml -->
  <property name="ossrh-server-id" value="ossrh" />

  <path id="project.classpath" cache="true">
    <fileset dir="lib">
      <include name="javassist-3.20.0-GA-jackplay.jar"/>
    </fileset>
  </path>

  <path id="test.classpath" cache="true">
    <fileset dir="lib">
      <include name="junit-4.12.jar"/>
      <include name="javassist-3.20.0-GA-jackplay.jar"/>
      <include name="java-hamcrest-2.0.0.0.jar"/>
    </fileset>
    <pathelement location="build/classes"/>
  </path>

  <target name="init">
    <tstamp/>
    <mkdir dir="build"/>
    <mkdir dir="build/classes"/>
    <mkdir dir="build/test-classes"/>
    <mkdir dir="build/test-reports"/>
    <mkdir dir="build/soak-agent-reports"/>
    <mkdir dir="build/soak-app-reports"/>
  </target>

  <target name="compile" depends="init" description="compile the source">
    <javac srcdir="src" destdir="build/classes" includeantruntime="false" debug="yes">
      <classpath refid="project.classpath"/>
    </javac>
    <javac srcdir="test" destdir="build/test-classes" includeantruntime="false" debug="yes">
      <classpath refid="test.classpath"/>
    </javac>
  </target>

  <target name="test" depends="compile,dist">
    <junit printsummary="yes" haltonfailure="no">
      <classpath refid="project.classpath" />
      <classpath refid="test.classpath" />
      <classpath location="build/test-classes" />

      <formatter type="xml" />
      <formatter type="plain" />

      <batchtest fork="yes" todir="build/test-reports">
        <fileset dir="test">
          <include name="unit/**/*Test*.java" />
        </fileset>
      </batchtest>
    </junit>

    <junit printsummary="yes" haltonfailure="no">
      <jvmarg value="-Xbootclasspath/a:dist/jackplay-bootstrap-latest.jar"/>
      <jvmarg value="-javaagent:dist/jackplay-agent-latest.jar=logLevel=debug,port=8171"/>

      <classpath refid="project.classpath" />
      <classpath refid="test.classpath" />
      <classpath location="build/test-classes" />

      <formatter type="xml" />
      <formatter type="plain" />

      <batchtest fork="yes" todir="build/test-reports">
        <fileset dir="test">
          <include name="integration/**/*Test*.java" />
        </fileset>
      </batchtest>
    </junit>

    <junitreport todir="build/test-reports">
      <fileset dir="build/test-reports">
        <include name="TEST-*.xml"/>
      </fileset>
      <report format="frames" todir="build/test-reports/html"/>
    </junitreport>
  </target>

  <target name="soak-agent" depends="compile,dist">
    <junit printsummary="yes" haltonfailure="no" fork="true">
      <jvmarg value="-XX:DumpLoadedClassList=soak-agent.classlist"/>
      <jvmarg value="-XX:NativeMemoryTracking=summary"/>
      <jvmarg value="-XX:+TraceClassLoading"/>
      <jvmarg value="-XX:+TraceClassUnloading"/>
      <!--<jvmarg value="-XX:MetaspaceSize=12m" />-->
      <!--<jvmarg value="-XX:MaxMetaspaceSize=12m" />-->
      <jvmarg value="-Xbootclasspath/a:dist/jackplay-bootstrap-latest.jar"/>
      <jvmarg value="-javaagent:dist/jackplay-agent-latest.jar=logFile=soak-agent.log,logLevel=debug,port=8172"/>

      <classpath refid="project.classpath" />
      <classpath refid="test.classpath" />
      <classpath location="build/test-classes" />

      <formatter type="xml" />
      <formatter type="plain" />

      <batchtest fork="yes" todir="build/soak-agent-reports">
        <fileset dir="test">
          <include name="soak/JackSoakAgentTest.java" />
        </fileset>
      </batchtest>
    </junit>

    <junitreport todir="build/soak-agent-reports">
      <fileset dir="build/soak-agent-reports">
        <include name="TEST-*.xml"/>
      </fileset>
      <report format="frames" todir="build/soak-agent-reports/html"/>
    </junitreport>
  </target>

  <target name="soak-app" depends="compile,dist">
    <junit printsummary="yes" haltonfailure="no">
      <jvmarg value="-Xbootclasspath/a:dist/jackplay-bootstrap-latest.jar"/>
      <jvmarg value="-javaagent:dist/jackplay-agent-latest.jar=logLevel=debug,port=8173"/>

      <classpath refid="project.classpath" />
      <classpath refid="test.classpath" />
      <classpath location="build/test-classes" />

      <formatter type="xml" />
      <formatter type="plain" />

      <batchtest fork="yes" todir="build/soak-app-reports">
        <fileset dir="test">
          <include name="soak/JackSoakAppTest.java" />
        </fileset>
      </batchtest>
    </junit>

    <junitreport todir="build/soak-app-reports">
      <fileset dir="build/soak-app-reports">
        <include name="TEST-*.xml"/>
      </fileset>
      <report format="frames" todir="build/soak-app-reports/html"/>
    </junitreport>
  </target>

  <target name="javadoc-jar">
    <!-- build the javadoc jar -->
    <javadoc destdir="dist/javadoc/bootstrap" >
      <packageset dir="src" defaultexcludes="yes">
        <include name="jackplay/bootstrap/**"/>
      </packageset>
    </javadoc>
    <jar jarfile="${bootstrap-javadoc-jar}">
      <fileset dir="dist/javadoc/bootstrap" />
    </jar>

    <javadoc destdir="dist/javadoc/agent" >
      <classpath refid="project.classpath"/>
      <packageset dir="src" defaultexcludes="yes">
        <exclude name="jackplay/bootstrap/**"/>
      </packageset>
    </javadoc>
    <jar jarfile="${agent-javadoc-jar}">
      <fileset dir="dist/javadoc/agent" />
    </jar>
  </target>

  <target name="sources-jar">
    <!-- build the sources jar -->
    <jar jarfile="${bootstrap-sources-jar}">
      <fileset dir="src">
        <filename name="jackplay/bootstrap/**/*.java"/>
      </fileset>
    </jar>
    <jar jarfile="${agent-sources-jar}">
      <fileset dir="src">
        <exclude name="jackplay/bootstrap" />
        <exclude name="jackplay/bootstrap/**/*.java" />
      </fileset>
      <fileset dir="resources" />
    </jar>
  </target>

  <target name="dist" depends="compile" description="generate the distribution">
    <mkdir dir="dist"/>

    <jar jarfile="dist/jackplay-bootstrap-${version}.jar">
      <fileset dir="build/classes">
        <include name="jackplay/bootstrap/*"/>
        <exclude name="javaplay/play/**/*"/>
        <exclude name="javaplay/web/**/*"/>
        <exclude name="javaplay/*"/>
      </fileset>
    </jar>
    <copy file="dist/jackplay-bootstrap-${version}.jar" tofile="dist/jackplay-bootstrap-latest.jar"/>

    <jar jarfile="dist/jackplay-agent-${version}.jar">
      <zipfileset src="lib/javassist-3.20.0-GA-jackplay.jar"/>
      <fileset dir="build/classes">
        <exclude name="jackplay/bootstrap"/>
        <exclude name="jackplay/bootstrap/*"/>
      </fileset>
      <fileset dir="resources"/>
      <manifest>
        <attribute name="Premain-Class" value="jackplay.Theatre"/>
        <attribute name="Can-Redefine-Classes" value="false"/>
        <attribute name="Can-Retransform-Classes" value="true"/>
      </manifest>
    </jar>
    <copy file="dist/jackplay-agent-${version}.jar" tofile="dist/jackplay-agent-latest.jar"/>
  </target>

  <target name="dist-all" depends="dist, javadoc-jar, sources-jar">

  </target>

  <target name="deploy-snapshot" depends="clean,dist-all" description="deploy snapshot version to Maven snapshot repository">
    <artifact:mvn>
      <arg value="org.apache.maven.plugins:maven-deploy-plugin:2.6:deploy-file" />
      <arg value="-Durl=${ossrh-snapshots-repository-url}" />
      <arg value="-DrepositoryId=${ossrh-server-id}" />
      <arg value="-DpomFile=pom-bootstrap.xml" />
      <arg value="-Dfile=${bootstrap-jar}" />
    </artifact:mvn>
    <artifact:mvn>
      <arg value="org.apache.maven.plugins:maven-deploy-plugin:2.6:deploy-file" />
      <arg value="-Durl=${ossrh-snapshots-repository-url}" />
      <arg value="-DrepositoryId=${ossrh-server-id}" />
      <arg value="-DpomFile=pom-agent.xml" />
      <arg value="-Dfile=${agent-jar}" />
    </artifact:mvn>
  </target>

  <!-- before this, update project version (both build.xml and pom.xml) from SNAPSHOT to RELEASE -->
  <target name="deploy-stage" depends="clean,dist-all" description="deploy release version to Maven staging repository">
    <!-- sign and deploy the main artifact -->
    <artifact:mvn>
      <arg value="org.apache.maven.plugins:maven-gpg-plugin:1.3:sign-and-deploy-file" />
      <arg value="-Durl=${ossrh-staging-repository-url}" />
      <arg value="-DrepositoryId=${ossrh-server-id}" />
      <arg value="-DpomFile=pom-bootstrap.xml" />
      <arg value="-Dfile=${bootstrap-jar}" />
      <arg value="-Pgpg" />
    </artifact:mvn>

    <!-- sign and deploy the sources artifact -->
    <artifact:mvn>
      <arg value="org.apache.maven.plugins:maven-gpg-plugin:1.3:sign-and-deploy-file" />
      <arg value="-Durl=${ossrh-staging-repository-url}" />
      <arg value="-DrepositoryId=${ossrh-server-id}" />
      <arg value="-DpomFile=pom-bootstrap.xml" />
      <arg value="-Dfile=${bootstrap-sources-jar}" />
      <arg value="-Dclassifier=sources" />
      <arg value="-Pgpg" />
    </artifact:mvn>
    <!-- sign and deploy the javadoc artifact -->
    <artifact:mvn>
      <arg value="org.apache.maven.plugins:maven-gpg-plugin:1.3:sign-and-deploy-file" />
      <arg value="-Durl=${ossrh-staging-repository-url}" />
      <arg value="-DrepositoryId=${ossrh-server-id}" />
      <arg value="-DpomFile=pom-bootstrap.xml" />
      <arg value="-Dfile=${bootstrap-javadoc-jar}" />
      <arg value="-Dclassifier=javadoc" />
      <arg value="-Pgpg" />
    </artifact:mvn>

    <artifact:mvn>
      <arg value="org.apache.maven.plugins:maven-gpg-plugin:1.3:sign-and-deploy-file" />
      <arg value="-Durl=${ossrh-staging-repository-url}" />
      <arg value="-DrepositoryId=${ossrh-server-id}" />
      <arg value="-DpomFile=pom-agent.xml" />
      <arg value="-Dfile=${agent-jar}" />
      <arg value="-Pgpg" />
    </artifact:mvn>
    <artifact:mvn>
      <arg value="org.apache.maven.plugins:maven-gpg-plugin:1.3:sign-and-deploy-file" />
      <arg value="-Durl=${ossrh-staging-repository-url}" />
      <arg value="-DrepositoryId=${ossrh-server-id}" />
      <arg value="-DpomFile=pom-agent.xml" />
      <arg value="-Dfile=${agent-sources-jar}" />
      <arg value="-Dclassifier=sources" />
      <arg value="-Pgpg" />
    </artifact:mvn>
    <artifact:mvn>
      <arg value="org.apache.maven.plugins:maven-gpg-plugin:1.3:sign-and-deploy-file" />
      <arg value="-Durl=${ossrh-staging-repository-url}" />
      <arg value="-DrepositoryId=${ossrh-server-id}" />
      <arg value="-DpomFile=pom-agent.xml" />
      <arg value="-Dfile=${agent-javadoc-jar}" />
      <arg value="-Dclassifier=javadoc" />
      <arg value="-Pgpg" />
    </artifact:mvn>
  </target>

  <target name="clean" description="clean up">
    <delete dir="build"/>
    <delete dir="dist"/>
  </target>
</project>
